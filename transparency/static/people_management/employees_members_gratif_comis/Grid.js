/** autogenerated **/
/**
 *
 **/
Ext._define('transparency.people_management.employees_members_gratif_comis.Grid', {
    extend: 'core.RestfulGrid',

    restWindow: 'transparency.people_management.employees_members_gratif_comis.Window',
    rest: 'transparency.people_management.employees_members_gratif_comis.Restful',

    configOrderToolBar: ['add', '-', 'loadData', '-', 'search', '->', 'filter', 'download'],

    hideActions: ['remove', 'edit'],

    getColumnModel: function() {
        if(!this._columnModel)
            this._columnModel = Ext._create(
                'Ext.grid.ColumnModel',
                [
                    Ext._create('Ext.grid.RowNumberer'),
                    {header: 'Cod', dataIndex: 'pk', width: 50, hidden: true},
                    {header: 'Tipo', dataIndex: 'is_member', width: 90, renderer: function(value) { return (value ? 'MEMBRO' : 'SERVIDOR'); }},
                    {header: 'Mês', dataIndex: 'month', width: 50},
                    {header: 'Ano', dataIndex: 'year', width: 50},
                    {header: 'Matrícula', dataIndex: 'registration', width: 90},
                    {header: 'Nome', dataIndex: 'name', width: 90, id: 'autoExpandColumn'},
                    {header: 'Vínculo', dataIndex: 'bond', width: 90},
                    {header: 'Gratificação', dataIndex: 'comission_role', width: 90},
                    {header: 'Lotação', dataIndex: 'workplace', width: 90},
                    
                    {header: 'Ato/Portaria nº (Nomeação)', dataIndex: 'ordinance_number_nomination', width: 90, renderer: function(value, element, record) { return record.data['ordinance_number_nomination']+'/'+record.data['ordinance_year_nomination']; }},
                    {header: 'Data da Publicação (Nomeação)', dataIndex: 'publication_date_nomination', width: 90, renderer: Ext.util.Format.dateRenderer('d/m/Y')},

                    {header: 'created by', dataIndex: 'created_by_unicode', width: 120, hidden: true},
                    {header: 'modified by', dataIndex: 'modified_by_unicode', width: 120, hidden: true},
                    {header: 'created at', dataIndex: 'created_at', width: 90, renderer: Ext.util.Format.dateRenderer('d/m/Y H:i'), hidden: true},
                    {header: 'modified at', dataIndex: 'modified_at', width: 90, renderer: Ext.util.Format.dateRenderer('d/m/Y H:i'), hidden: true},
                ]
            );

        return this._columnModel;
    },

    loadingData: function() {    
        var _window = Ext._create(
            'transparency.people_management.employees_members_gratif_comis.PMLoadDataWindow'
        );

        _window.show();
    },

    getLoadDataAction: function () {
        if (!this._loadData)  {
            this._loadData = Ext._create('Ext.Button', {
                text: 'Carregar Dados',
                iconCls: 'icon-agree icon-agree-appointment-new',
                scope: this,
                handler: function () {
                    this.loadingData();
                }
            });
        }
        return this._loadData;
    },

    getFilterAction: function() {
        if(!this._filterAction)
            this._filterAction = Ext._create('Ext.Button', {
                text: 'Filtro',
                iconCls: 'icon-patrimonio icon-pat-filter',
                menu: [
                    {
                        text: 'Servidores',
                        checked: false,
                        scope: this,
                        hideOnClick: false,
                        listeners: {
                            scope: this,
                            checkchange: function (item, checked) {
                                if (checked)
                                    this.addFilterProperty('is_member', 'off', 110);
                                else
                                    this.removeFilterProperty('is_member', 110);
                            }
                        }
                    },
                    {
                        text: 'Membros',
                        checked: false,
                        scope: this,
                        hideOnClick: false,
                        listeners: {
                            scope: this,
                            checkchange: function (item, checked) {
                                if (checked)
                                    this.addFilterProperty('is_member', 'true', 110);
                                else
                                    this.removeFilterProperty('is_member', 110);
                            }
                        }
                    },
                ]
            });
    
        return this._filterAction;
    },


});

core.RestfulGrid.register(
    'transparency.people_management.employees_members_gratif_comis.Restful',
    'transparency.people_management.employees_members_gratif_comis.Grid'
);

