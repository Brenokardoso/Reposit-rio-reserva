/** autogenerated **/
/**
 *
 **/
 Ext._define('transparency.people_management.collaborators.Restful', {
    extend: 'core.Restful',

    resource: 'TPMCollaboratorsCache',

    generateFromSolicitations: function(values, successCallback, failureCallback, commonCallback) {

        this.doRequest(
            this.getRoute(
                'generate_from_solicitations',
                false,
                'POST',
                {
                    params: values,
                    success: function(xhr) {
                        var rst = Ext.decode(xhr.responseText);

                        if(rst.success) {
                            core.invokeCallback(
                                successCallback || { fn: Ext.emptyFn },
                                rst
                            );
                        } else {
                            core.invokeCallback(
                                failureCallback || { fn: Ext.emptyFn },
                                rst.message
                            );
                        }
                    },
                    failure: function(xhr) {
                        core.invokeCallback(
                            failureCallback || { fn: Ext.emptyFn }
                        );
                    },
                    callback: function(xhr) {
                        core.invokeCallback(commonCallback || { fn: Ext.emptyFn });
                    }
                }
            )
        );
    },

    getFields: function(cfg) {
        if(!this._fields)
            this._fields = transparency.people_management.collaborators.Restful.superclass.getFields.call(this, cfg).concat([
                {
                    name: "created_by",
                    type: "int",
                    useNull: true
                },
                {
                    name: "created_by_unicode",
                    type: "string"
                },
                {
                    name: "modified_by",
                    type: "int",
                    useNull: true
                },
                {
                    name: "modified_by_unicode",
                    type: "string"
                },
                {
                    name: "created_at",
                    type: "date",
                    dateFormat: "d/m/Y H:i"
                },
                {
                    name: "modified_at",
                    type: "date",
                    dateFormat: "d/m/Y H:i"
                },
                {
                    name: "month",
                    type: "string"
                },
                {
                    name: "year",
                    type: "string"
                },
                {
                    name: "name",
                    type: "string"
                },
                {
                    name: "act_number",
                    type: "string"
                },
                {
                    name: "act_year",
                    type: "string"
                },
                {
                    name: "workplace",
                    type: "string"
                },
                {
                    name: "cathegory",
                    type: "string"
                }
            ]);

        return this._fields;
    }
});
